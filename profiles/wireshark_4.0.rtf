{\rtf1\ansi\ansicpg1252\cocoartf2513
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 BitstreamVeraSans-Bold;\f1\froman\fcharset0 TimesNewRomanPSMT;\f2\froman\fcharset0 TimesNewRomanPS-ItalicMT;
\f3\fnil\fcharset0 Menlo-Regular;\f4\froman\fcharset0 TimesNewRomanPS-BoldMT;}
{\colortbl;\red255\green255\blue255;\red4\green50\blue134;\red0\green0\blue0;\red0\green0\blue233;
}
{\*\expandedcolortbl;;\cssrgb\c0\c27451\c59608;\cssrgb\c0\c0\c0;\cssrgb\c0\c0\c93333;
}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid1}
{\list\listtemplateid2\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid101\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid2}
{\list\listtemplateid3\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid201\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid3}
{\list\listtemplateid4\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid301\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{circle\}}{\leveltext\leveltemplateid302\'01\uc0\u9702 ;}{\levelnumbers;}\fi-360\li1440\lin1440 }{\listname ;}\listid4}
{\list\listtemplateid5\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid401\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{circle\}}{\leveltext\leveltemplateid402\'01\uc0\u9702 ;}{\levelnumbers;}\fi-360\li1440\lin1440 }{\listname ;}\listid5}
{\list\listtemplateid6\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid501\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{circle\}}{\leveltext\leveltemplateid502\'01\uc0\u9702 ;}{\levelnumbers;}\fi-360\li1440\lin1440 }{\listname ;}\listid6}
{\list\listtemplateid7\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid601\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid7}
{\list\listtemplateid8\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid701\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid8}
{\list\listtemplateid9\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid801\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid9}
{\list\listtemplateid10\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid901\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{circle\}}{\leveltext\leveltemplateid902\'01\uc0\u9702 ;}{\levelnumbers;}\fi-360\li1440\lin1440 }{\listname ;}\listid10}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}{\listoverride\listid2\listoverridecount0\ls2}{\listoverride\listid3\listoverridecount0\ls3}{\listoverride\listid4\listoverridecount0\ls4}{\listoverride\listid5\listoverridecount0\ls5}{\listoverride\listid6\listoverridecount0\ls6}{\listoverride\listid7\listoverridecount0\ls7}{\listoverride\listid8\listoverridecount0\ls8}{\listoverride\listid9\listoverridecount0\ls9}{\listoverride\listid10\listoverridecount0\ls10}}
{\info
{\author Kevin Mason}}\margl1440\margr1440\vieww33320\viewh23160\viewkind0
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\b\fs36 \cf2 \expnd0\expndtw0\kerning0
Wireshark 4.0.0 Release Notes\
What is Wireshark?\
\pard\pardeftab720\partightenfactor0

\f1\b0 \cf0 Wireshark is the world\'92s most popular network protocol analyzer. It is used for troubleshooting, analysis, development and education.\
\pard\pardeftab720\partightenfactor0

\f0\b \cf2 \
What\'92s New\
\pard\pardeftab720\partightenfactor0

\f2\i\b0 \cf0 We no longer ship official 32-bit Windows packages starting with this release
\f1\i0 . If you need to use Wireshark on that platform, we recommend using the latest 3.6 release. {\field{\*\fldinst{HYPERLINK "https://gitlab.com/wireshark/wireshark/-/issues/17779"}}{\fldrslt \cf4 \ul \ulc4 Issue 17779}}\
The display filter syntax is more powerful with many new extensions. See below for details.\
The Conversation and Endpoint dialogs have been redesigned. See below for details.\
The default main window layout has been changed so that the Packet Detail and Packet Bytes are side by side underneath the Packet List pane.\
Hex dump imports from Wireshark and from 
\f3 text2pcap
\f1  have been improved. See below for details.\
Speed when using MaxMind geolocation has been greatly improved.\
The tools and libraries required to build Wireshark have changed. See \'93Other Development Changes\'94 below for more details.\
Many other improvements have been made. See the \'93New and Updated Features\'94 section below for more details.\
\pard\pardeftab720\partightenfactor0

\f0\b \cf2 \
New and Updated Features\
\pard\pardeftab720\partightenfactor0

\f1\b0 \cf0 The following features are new (or have been significantly updated) since version 4.0.0rc2:\
Nothing of note\
\
The following features are new (or have been significantly updated) since version 4.0.0rc1:\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls1\ilvl0\cf0 \kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
The macOS packages now ship with Qt 6.2.4 and require macOS 10.14. They previously shipped with Qt 5.15.3.\
\ls1\ilvl0\kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
The Windows installers now ship with Npcap 1.71. They previously shipped with Npcap 1.70.\
\pard\pardeftab720\partightenfactor0
\cf0 The following features are new (or have been significantly updated) since version 3.7.2:\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls2\ilvl0\cf0 \kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
The Windows installers now ship with Npcap 1.70. They previously shipped with Npcap 1.60.\
\pard\pardeftab720\partightenfactor0
\cf0 The following features are new (or have been significantly updated) since version 3.7.1:\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls3\ilvl0\cf0 \kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
The 'v' (lower case) and 'V' (upper case) switches have been swapped for editcap and mergecap to match the other command line utilities.\
\ls3\ilvl0\kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
The ip.flags field is now only the three high bits, not the full byte. Display filters and Coloring rules using the field will need to be adjusted.\
\ls3\ilvl0\kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
New address type AT_NUMERIC allows simple numeric addresses for protocols which do not have a more common-style address approach, analog to AT_STRINGZ.\
\pard\pardeftab720\partightenfactor0
\cf0 The following features are new (or have been significantly updated) since version 3.7.0:\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls4\ilvl0\cf0 \kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
The Windows installers now ship with Qt 6.2.3. They previously shipped with Qt 6.2.4.\
\ls4\ilvl0\kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
The Conversation and Endpoint dialogs have been redesigned with the following improvements:\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\partightenfactor0
\ls4\ilvl1\cf0 \kerning1\expnd0\expndtw0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
The context menu now includes the option to resize all columns, as well as copying elements.\
\ls4\ilvl1\kerning1\expnd0\expndtw0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
Data may be exported as JSON.\
\ls4\ilvl1\kerning1\expnd0\expndtw0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
Tabs may be detached and reattached from the dialog.\
\ls4\ilvl1\kerning1\expnd0\expndtw0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
Adding and removing tabs will keep them in the same order all the time.\
\ls4\ilvl1\kerning1\expnd0\expndtw0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
If a filter is applied, two columns are shown in either dialog detailing the difference between unmatched and matched packets.\
\ls4\ilvl1\kerning1\expnd0\expndtw0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
Columns are now sorted via secondary properties if an identical entry is found.\
\ls4\ilvl1\kerning1\expnd0\expndtw0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
Conversations are sorted via second address and first port number.\
\ls4\ilvl1\kerning1\expnd0\expndtw0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
Endpoints are sorted via port numbers.\
\ls4\ilvl1\kerning1\expnd0\expndtw0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
IPv6 addresses are sorted correctly after IPv4 addresses.\
\ls4\ilvl1\kerning1\expnd0\expndtw0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
The dialog elements have been moved to make it easier to handle for new users.\
\ls4\ilvl1\kerning1\expnd0\expndtw0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
Selection of tap elements is done via a list.\
\ls4\ilvl1\kerning1\expnd0\expndtw0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
All configurations and options are done via a left side button row.\
\ls4\ilvl1\kerning1\expnd0\expndtw0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
Columns for the Conversations and Endpoint dialogs can be hidden by a context menu.\
\ls4\ilvl1\kerning1\expnd0\expndtw0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
TCP and UDP conversations now include the stream ID and allow filtering on it.\
\pard\tx720\pardeftab720\partightenfactor0
\cf0 \
\pard\pardeftab720\partightenfactor0
\cf0 The following features are new (or have been significantly updated) since version 3.6.0:\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls5\ilvl0\cf0 \kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
The Windows installers now ship with Npcap 1.60. They previously shipped with Npcap 1.55.\
\ls5\ilvl0\kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
The Windows installers now ship with Qt 6.2.4. They previously shipped with Qt 5.12.2.\
\ls5\ilvl0\kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
The display filter syntax has been updated and enhanced:\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\partightenfactor0
\ls5\ilvl1\cf0 \kerning1\expnd0\expndtw0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
A syntax to match a specific layer in the protocol stack has been added. For example in an IP-over-IP packet \'93ip.addr#1 == 1.1.1.1\'94 matches the outer layer addresses and \'93ip.addr#2 == 1.1.1.2\'94 matches the inner layer addresses.\
\ls5\ilvl1\kerning1\expnd0\expndtw0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
Universal quantifiers "any" and "all" have been added to any relational operator. For example the expression "all tcp.port > 1024" is true if and only if all tcp.port fields match the condition. Previously only the default behavior to return true if any one field matches was supported.\
\ls5\ilvl1\kerning1\expnd0\expndtw0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
Field references, of the form $\{some.field\}, are now part of the syntax of display filters. Previously they were implemented as macros. The new implementation is more efficient and has the same properties as protocol fields, like matching on multiple values using quantifiers and support for layer filtering.\
\ls5\ilvl1\kerning1\expnd0\expndtw0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
Arithmetic is supported for numeric fields with the usual operators \'93+\'94, \'93-\'94, \'93*\'94, \'93/\'94, and \'93%\'94. Arithmetic expressions must be grouped using curly brackets (not parenthesis).\
\ls5\ilvl1\kerning1\expnd0\expndtw0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
New display filter functions max(), min() and abs() have been added.\
\ls5\ilvl1\kerning1\expnd0\expndtw0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
Functions can accept expressions as arguments, including other functions. Previously only protocol fields and slices were syntactically valid function arguments.\
\ls5\ilvl1\kerning1\expnd0\expndtw0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
A new syntax to disambiguate literals from identifiers has been added. Every value with a leading dot is a protocol or protocol field. Every value in between angle brackets is a literal value. See the {\field{\*\fldinst{HYPERLINK "https://www.wireshark.org/docs/wsug_html_chunked/ChWorkBuildDisplayFilterSection.html#_some_protocol_names_can_be_ambiguous"}}{\fldrslt \cf4 \ul \ulc4 User\'92s Guide}} for details.\
\ls5\ilvl1\kerning1\expnd0\expndtw0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
The "bitwise and" operator is now a first-class bit operator, not a boolean operator. In particular this means it is now possible to mask bits, e.g.: frame[0] & 0x0F == 3.\
\ls5\ilvl1\kerning1\expnd0\expndtw0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
Dates and times can be given in UTC using ISO 8601 (with 'Z' timezone) or by appending the suffix "UTC" to the legacy formats. Otherwise local time is used.\
\ls5\ilvl1\kerning1\expnd0\expndtw0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
Integer literal constants may be written in binary (in addition to decimal/octal/hexadecimal) using the prefix "0b" or "0B".\
\ls5\ilvl1\kerning1\expnd0\expndtw0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
Logical AND now has higher precedence than logical OR, in line with most programming languages.\
\ls5\ilvl1\kerning1\expnd0\expndtw0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
It is now possible to index protocol fields from the end using negative indexes. For example the following expression tests the last two bytes of the TCP protocol field: tcp[-2:] == AA:BB. This was a longstanding bug that has been fixed in this release.\
\ls5\ilvl1\kerning1\expnd0\expndtw0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
Set elements must be separated using a comma, e.g: \{1, 2, "foo"\}. Using only whitespace as a separator was deprecated in 3.6 and is now a syntax error.\
\ls5\ilvl1\kerning1\expnd0\expndtw0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
Support for some additional character escape sequences in double quoted strings has been added. Along with octal (\\<number>) and hex (\\x<number>) encoding, the following C escape sequences are now supported with the same meaning: \\a, \\b, \\f, \\n, \\r, \\t, \\v. Previously they were only supported with character constants.\
\ls5\ilvl1\kerning1\expnd0\expndtw0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
Unicode universal character names are now supported with the escape sequences \\uNNNN or \\UNNNNNNNN, where N is a hexadecimal digit.\
\ls5\ilvl1\kerning1\expnd0\expndtw0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
Unrecognized escape sequences are now treated as a syntax error. Previously they were treated as a literal character. In addition to the sequences indicated above, backslash, single quotation and double quotation mark are also valid sequences: \\\\, \\', \\".\
\ls5\ilvl1\kerning1\expnd0\expndtw0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
A new strict equality operator "===" or "all_eq" has been added. The expression "a === b" is true if and only if all a\'92s are equal to b. The negation of "===" can now be written as "!==" (any_ne).\
\ls5\ilvl1\kerning1\expnd0\expndtw0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
The aliases "any_eq" for "==" and "all_ne" for "!=" have been added.\
\ls5\ilvl1\kerning1\expnd0\expndtw0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
The operator "~=" is deprecated and will be removed in a future version. Use "!==", which has the same meaning instead.\
\ls5\ilvl1\kerning1\expnd0\expndtw0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
Floats must be written with a leading and ending digit. For example the values ".7" and "7." are now invalid as floats. They must be written "0.7" and "7.0" respectively.\
\ls5\ilvl1\kerning1\expnd0\expndtw0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
The display filter engine now uses PCRE2 instead of GRegex (GLib\'92s bindings to the older and end-of-life PCRE library). PCRE2 is compatible with PCRE so any user-visible changes should be minimal. Some exotic patterns may now be invalid and require rewriting.\
\ls5\ilvl1\kerning1\expnd0\expndtw0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
Literal strings can handle embedded null bytes (the value '\\0') correctly. This includes regular expression patterns. For example the double-quoted string "\\0 is a null byte" is a legal literal value. This may be useful to match byte patterns but note that in general protocol fields with a string type still cannot contain embedded null bytes.\
\ls5\ilvl1\kerning1\expnd0\expndtw0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
Booleans can be written as True/TRUE or False/FALSE. Previously they could only be written as 1 or 0.\
\ls5\ilvl1\kerning1\expnd0\expndtw0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
It is now possible to test for the existence of a slice.\
\ls5\ilvl1\kerning1\expnd0\expndtw0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
All integer sizes are now compatible. Unless overflow occurs any integer field can be compared with any other.\
\pard\tx720\pardeftab720\partightenfactor0
\cf0 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls6\ilvl0\cf0 \kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
The 
\f3 text2pcap
\f1  command and the \'93Import from Hex Dump\'94 feature have been updated and enhanced:\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\partightenfactor0
\ls6\ilvl1
\f3 \cf0 \kerning1\expnd0\expndtw0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
text2pcap
\f1  supports writing the output file in all the capture file formats that wiretap library supports, using the same 
\f3 -F
\f1  option as 
\f3 editcap
\f1 , 
\f3 mergecap
\f1 , and 
\f3 tshark
\f1 .\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\partightenfactor0
\ls6\ilvl1\cf0 \kerning1\expnd0\expndtw0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
Consistent with the other command line tools like 
\f3 editcap
\f1 , 
\f3 mergecap
\f1 , 
\f3 tshark
\f1 , and the "Import from Hex Dump" option within Wireshark, the default capture file format for 
\f3 text2pcap
\f1  is now 
\f4\b pcapng
\f1\b0 . The 
\f3 -n
\f1  flag to select pcapng (instead of the previous default, pcap) has been deprecated and will be removed in a future release.\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\partightenfactor0
\ls6\ilvl1
\f3 \cf0 \kerning1\expnd0\expndtw0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
text2pcap
\f1  supports selecting the encapsulation type of the output file format using the wiretap library short names with an 
\f3 -E
\f1  option, similar to the 
\f3 -T
\f1  option of 
\f3 editcap
\f1 .\
\ls6\ilvl1
\f3 \kerning1\expnd0\expndtw0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
text2pcap
\f1  has been updated to use the new logging output options and the 
\f3 -d
\f1  flag has been removed. The "debug" log level corresponds to the old 
\f3 -d
\f1  flag, and the "noisy" log level corresponds to using 
\f3 -d
\f1  multiple times.\
\ls6\ilvl1
\f3 \kerning1\expnd0\expndtw0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
text2pcap
\f1  and \'93Import from Hex Dump\'94 support writing fake IP, TCP, UDP, and SCTP headers to files with Raw IP, Raw IPv4, and Raw IPv6 encapsulations, in addition to Ethernet encapsulation available in previous versions.\
\ls6\ilvl1
\f3 \kerning1\expnd0\expndtw0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
text2pcap
\f1  supports scanning the input file using a custom regular expression, as supported in \'93Import from Hex Dump\'94 in Wireshark 3.6.x.\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\partightenfactor0
\ls6\ilvl1\cf0 \kerning1\expnd0\expndtw0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
In general, 
\f3 text2pcap
\f1  and wireshark\'92s \'93Import from Hex Dump\'94 have feature parity.\
\pard\tx720\pardeftab720\partightenfactor0
\cf0 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls7\ilvl0\cf0 \kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
The default main window layout has been changed so that the Packet Detail and Packet Bytes are side by side underneath the Packet List pane.\
\ls7\ilvl0\kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
The HTTP2 dissector now supports using fake headers to parse the DATAs of streams captured without first HEADERS frames of a long-lived stream (such as a gRPC streaming call which allows sending many request or response messages in one HTTP2 stream). Users can specify fake headers using an existing stream\'92s server port, stream id and direction.\
\ls7\ilvl0\kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
The IEEE 802.11 dissector supports Mesh Connex (MCX).\
\ls7\ilvl0\kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
The \'93Capture Options\'94 dialog contains the same configuration icon as the Welcome Screen. It is now possible to configure interfaces there.\
\ls7\ilvl0\kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
The \'93Extcap\'94 dialog remembers password items during runtime, which makes it possible to run extcaps multiple times in row without having to reenter the password each time. Passwords are never stored on disk.\
\ls7\ilvl0\kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
It is possible to set extcap passwords in 
\f3 tshark
\f1  and other CLI tools.\
\ls7\ilvl0\kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
The extcap configuration dialog now supports and remembers empty strings. There are new buttons to reset values back to their defaults.\
\ls7\ilvl0\kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
Support to display JSON mapping for Protobuf message has been added.\
\ls7\ilvl0\kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
macOS debugging symbols are now shipped in separate packages, similar to Windows packages.\
\ls7\ilvl0\kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
In the ZigBee ZCL Messaging dissector the zbee_zcl_se.msg.msg_ctrl.depreciated field has been renamed to zbee_zcl_se.msg.msg_ctrl.deprecated\
\ls7\ilvl0\kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
The interface list on the welcome page sorts active interfaces first and only displays sparklines for active interfaces. Additionally, the interfaces can now be hidden and shown via the context menu in the interface list\
\ls7\ilvl0\kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
The Event Tracing for Windows (ETW) file reader now supports displaying IP packets from an event trace logfile or an event trace live session.\
\ls7\ilvl0\kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
ciscodump now supports IOS, IOS-XE and ASA remote capturing\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls7\ilvl0\cf0 \kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\
\pard\pardeftab720\partightenfactor0

\f0\b \cf2 Removed Features and Support\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls8\ilvl0
\f1\b0 \cf0 \kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
The CMake options starting with DISABLE_something were renamed ENABLE_something for consistency. For example DISABLE_WERROR=On became ENABLE_WERROR=Off. The default values are unchanged.\
\pard\pardeftab720\partightenfactor0

\f0\b \cf2 New Protocol Support\
\pard\pardeftab720\partightenfactor0

\f1\b0 \cf2 Allied Telesis Loop Detection (AT LDF)\
AUTOSAR I-PDU Multiplexer (AUTOSAR I-PduM)\
DTN Bundle Protocol Security (BPSec)\
DTN Bundle Protocol Version 7 (BPv7)\
DTN TCP Convergence Layer Protocol (TCPCL)\
DVB Selection Information Table (DVB SIT)\
Enhanced Cash Trading Interface 10.0 (XTI)\
Enhanced Order Book Interface 10.0 (EOBI)\
Enhanced Trading Interface 10.0 (ETI)\
FiveCo\'92s Legacy Register Access Protocol (5co-legacy)\
Generic Data Transfer Protocol (GDT)\
gRPC Web (gRPC-Web)\
Host IP Configuration Protocol (HICP)\
Huawei GRE bonding (GREbond)\
Locamation Interface Module (IDENT\
CALIBRATION\
SAMPLES - IM1\
SAMPLES - IM2R0)\
Mesh Connex (MCX)\
Microsoft Cluster Remote Control Protocol (RCP)\
Open Control Protocol for OCA/AES70 (OCP.1)\
Protected Extensible Authentication Protocol (PEAP)\
Realtek\
REdis Serialization Protocol v2 (RESP)\
Roon Discovery (RoonDisco)\
Secure File Transfer Protocol (sftp)\
Secure Host IP Configuration Protocol (SHICP)\
SSH File Transfer Protocol (SFTP)\
USB Attached SCSI (UASP)\
ZBOSS Network Coprocessor product (ZB NCP)\cf0 \
\
\pard\pardeftab720\partightenfactor0

\f0\b \cf2 Updated Protocol Support\
\pard\pardeftab720\partightenfactor0

\f1\b0 \cf0 Too many protocols have been updated to list here.\
\pard\pardeftab720\partightenfactor0

\f0\b \cf2 New and Updated Capture File Support\
\pard\pardeftab720\partightenfactor0

\f1\b0 \cf0 There is no new or updated capture file support in this release.\
\pard\pardeftab720\partightenfactor0

\f0\b \cf2 Major API Changes\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls9\ilvl0
\f1\b0 \cf0 \kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
proto.h: The field display types "STR_ASCII" and "STR_UNICODE" have been removed. Use "BASE_NONE" instead.\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls9\ilvl0\cf0 \kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
proto.h: The field display types for floats have been extended and refactored. The type BASE_FLOAT has been removed. Use BASE_NONE instead. New display types for floats are BASE_DEC, BASE_HEX, BASE_EXP and BASE_CUSTOM.\
\ls9\ilvl0\kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
The Wireshark Lua API now uses the {\field{\*\fldinst{HYPERLINK "https://github.com/rrthomas/lrexlib"}}{\fldrslt \cf4 \ul \ulc4 lrexlib}} bindings to PCRE2. Code using the Lua GRegex module will have to be updated to use lrexlib-pcre2 instead. In most cases the API should be compatible and the conversion just requires a module name change.\
\ls9\ilvl0\kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
The tap registration system has been updated and the list of arguments for tap_packet_cb has changed. All taps registered through register_tap_listener have to be updated.\
\pard\pardeftab720\partightenfactor0

\f0\b \cf2 Other Development Changes\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls10\ilvl0
\f1\b0 \cf0 \kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
The {\field{\*\fldinst{HYPERLINK "https://www.pcre.org/"}}{\fldrslt \cf4 \ul \ulc4 PCRE2 library}} is now required to build Wireshark.\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls10\ilvl0\cf0 \kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
You must now have a compiler with C11 support in order to build Wireshark.\
\ls10\ilvl0\kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
The following libraries and tools have had their minimum required version increased:\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\partightenfactor0
\ls10\ilvl1\cf0 \kerning1\expnd0\expndtw0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
CMake 3.10 is required on macOS and Linux.\
\ls10\ilvl1\kerning1\expnd0\expndtw0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
Qt version 5.12 (was 5.6.0), although compilation with 5.10 and 5.11 is still possible, but will trigger a warning during configuration.\
\ls10\ilvl1\kerning1\expnd0\expndtw0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
Windows SDK 10.0.18362.0 is required due to issues with C11 support.\
\ls10\ilvl1\kerning1\expnd0\expndtw0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
macOS version 10.11 to 10.14 (was 10.8) is required depending on the version of Qt:\
\ls10\ilvl1\kerning1\expnd0\expndtw0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
Qt 5.10 or higher requires macOS version 10.11\
\ls10\ilvl1\kerning1\expnd0\expndtw0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
Qt 5.12 or higher requires macOS version 10.12\
\ls10\ilvl1\kerning1\expnd0\expndtw0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
Qt 5.14 or higher requires macOS version 10.13\
\ls10\ilvl1\kerning1\expnd0\expndtw0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
Qt 6.0 or higher requires macOS version 10.14\
\ls10\ilvl1\kerning1\expnd0\expndtw0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
GLib version 2.50.0 (was 2.38.0) is required.\
\ls10\ilvl1\kerning1\expnd0\expndtw0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
Libgcrypt version 1.8.0 (was 1.5.0) is required.\
\ls10\ilvl1\kerning1\expnd0\expndtw0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
c-ares version 1.13.0 (was 1.5.0).\
\ls10\ilvl1\kerning1\expnd0\expndtw0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
Python version 3.6.0 (was 3.4.0).\
\ls10\ilvl1\kerning1\expnd0\expndtw0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
GnuTLS version 3.5.8 (was 3.3.0).\
\ls10\ilvl1\kerning1\expnd0\expndtw0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
Nghttp2 minimum version has been set to 1.11.0 (none previous).\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls10\ilvl0\cf0 \kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\
\ls10\ilvl0\kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
Perl is no longer required to build Wireshark, but may be required to build some source code files and run code analysis checks.\
\pard\pardeftab720\partightenfactor0

\f0\b \cf2 Getting Wireshark\
\pard\pardeftab720\partightenfactor0

\f1\b0 \cf0 Wireshark source code and installation packages are available from {\field{\*\fldinst{HYPERLINK "https://www.wireshark.org/download.html"}}{\fldrslt \cf4 \ul \ulc4 https://www.wireshark.org/download.html}}.\
\pard\pardeftab720\partightenfactor0

\f0\b \cf2 Vendor-supplied Packages\
\pard\pardeftab720\partightenfactor0

\f1\b0 \cf0 Most Linux and Unix vendors supply their own Wireshark packages. You can usually install or upgrade Wireshark using the package management system specific to that platform. A list of third-party packages can be found on the {\field{\*\fldinst{HYPERLINK "https://www.wireshark.org/download.html"}}{\fldrslt \cf4 \ul \ulc4 download page}} on the Wireshark web site.\
\pard\pardeftab720\partightenfactor0

\f0\b \cf2 File Locations\
\pard\pardeftab720\partightenfactor0

\f1\b0 \cf0 Wireshark and TShark look in several different locations for preference files, plugins, SNMP MIBS, and RADIUS dictionaries. These locations vary from platform to platform. You can use 
\f4\b Help
\f1\b0 \'a0
\f4\b \'9b
\f1\b0  
\f4\b About Wireshark
\f1\b0 \'a0
\f4\b \'9b
\f1\b0  
\f4\b Folders
\f1\b0  or 
\f3 tshark -G folders
\f1  to find the default locations on your system.\
\pard\pardeftab720\partightenfactor0

\f0\b \cf2 Getting Help\
\pard\pardeftab720\partightenfactor0

\f1\b0 \cf0 The User\'92s Guide, manual pages and various other documentation can be found at {\field{\*\fldinst{HYPERLINK "https://www.wireshark.org/docs/"}}{\fldrslt \cf4 \ul \ulc4 https://www.wireshark.org/docs/}}\
Community support is available on {\field{\*\fldinst{HYPERLINK "https://ask.wireshark.org/"}}{\fldrslt \cf4 \ul \ulc4 Wireshark\'92s Q&A site}} and on the wireshark-users mailing list. Subscription information and archives for all of Wireshark\'92s mailing lists can be found on {\field{\*\fldinst{HYPERLINK "https://www.wireshark.org/lists/"}}{\fldrslt \cf4 \ul \ulc4 the web site}}.\
Bugs and feature requests can be reported on {\field{\*\fldinst{HYPERLINK "https://gitlab.com/wireshark/wireshark/-/issues"}}{\fldrslt \cf4 \ul \ulc4 the issue tracker}}.\
You can learn protocol analysis and meet Wireshark\'92s developers at {\field{\*\fldinst{HYPERLINK "https://sharkfest.wireshark.org/"}}{\fldrslt \cf4 \ul \ulc4 SharkFest}}.\
\pard\pardeftab720\partightenfactor0

\f0\b \cf2 Frequently Asked Questions\
\pard\pardeftab720\partightenfactor0

\f1\b0 \cf0 A complete FAQ is available on the {\field{\*\fldinst{HYPERLINK "https://www.wireshark.org/faq.html"}}{\fldrslt \cf4 \ul \ulc4 Wireshark web site}}.}